import java.util.Scanner;

abstract class Shape {
	private Shape next;
	public Shape() { next = null;}
	public void setNext(Shape obj) {next = obj;} // 링크 연결
	public Shape getNext() {return next;}
	public abstract void draw();
}

class Circle extends Shape {
	@Override
	public void draw() {
		 System.out.println("Circle");
	}
}

class Line extends Shape {
	@Override
	public void draw() {
		 System.out.println("Line");
	}
}

class Rect extends Shape {
	@Override
	public void draw() {
		 System.out.println("Rect");
	}
}

class GraphicEditor { // 필요하다면 메소드 추가 가능
	//필드 선언
	String editorName=null;	//에디터이름
	Shape header = new Circle();//링크드리스트의 헤더. 추상메소드는 객체 생성이 안되서 circle로 만듬.
	Shape tmptNode;
	Shape preNode;
	Shape nxtNode;
	Scanner scanner = new Scanner(System.in);
	int selectedNum=0;
	int insertSelect=0;
	int deleteSelect=0;
	
	//생성자 작성
	public GraphicEditor(String editorName) {
		this.editorName=editorName;
	}


	public void run() {
		System.out.printf("그래픽 에디터 %s을 실행합니다.\n", editorName);
		while(true) {			
			System.out.print("삽입(1), 삭제(2), 모두 보기(3), 종료(4)>>");
			selectedNum=scanner.nextInt();
			if (selectedNum==1) {
				System.out.print("Line(1), Rect(2), Circle(3)>>");
				insertSelect=scanner.nextInt();
				insert(insertSelect);
			}
			else if(selectedNum==2) {
				System.out.print("삭제할 도형의 위치>>");
				deleteSelect=scanner.nextInt();
				delete(deleteSelect);
			}
			else if(selectedNum==3) {
				showAll();
			}
			else if(selectedNum==4) {
				System.out.printf("%s를 종료합니다.", editorName);
				break;
			}
		}
		scanner.close();
	}

	private boolean delete(int index) {
		tmptNode=header.getNext();
		while(true) {
			if(index>1) {
				for(int i = 0;i<index-1;i++) {						
					if(tmptNode!=null) {
						preNode=tmptNode;
						tmptNode=tmptNode.getNext();
					}
					else {
						System.out.println("삭제할 수 없습니다.");
						return false;
					}
				}
				if(tmptNode!=null) {
					preNode.setNext(tmptNode.getNext());
					tmptNode=null;
					System.out.println("정상적으로 삭제하였습니다.");
					return true;	
				}
			}
			else if(index==1) {
				if(tmptNode!=null) {
					tmptNode=header.getNext();
					nxtNode=tmptNode.getNext();
					header.setNext(nxtNode);
					tmptNode=null;
					System.out.println("정상적으로 삭제하였습니다.");
					return true;					
				}
				else {
					System.out.println("삭제할 수 없습니다.");
					return false;
				}
			}
			else
				System.out.println("잘못입력했습니다.");
		}
	

	}

	private void insert(int choice) {
		Shape insertedShape=null;
		tmptNode=header;
		if (choice==1) {
			insertedShape=new Line();
			System.out.println("Line inserted.");
		}
		else if(choice==2) {
			insertedShape=new Rect();
			System.out.println("Rect inserted.");
		}
		else if(choice==3) {
			insertedShape=new Circle();
			System.out.println("Circle inserted.");
		}
		while(true) {
			if(tmptNode.getNext()==null) {
				tmptNode.setNext(insertedShape);
				break;
			}
			else {
				tmptNode=tmptNode.getNext();				
			}
		}
		
	}
	private void showAll() {
		tmptNode=header.getNext();
		while(tmptNode!=null) {
			tmptNode.draw();
			tmptNode=tmptNode.getNext();
		}
	}
}

public class Practice5_12 {

	public static void main(String[] args) {
		GraphicEditor ge = new GraphicEditor("beauty");
		ge.run();

	}

}